{"version":3,"sources":["components/App.js","components/Editor.js","components/Calendar.js","index.js"],"names":["today","Editor","date","this","props","_this$props","showMessageInput","saveMessage","createSmilie","data","deletePreview","react_default","a","createElement","className","type","name","value","onChange","mood","contentMessage","undefined","placeholder","Link","to","onClick","Component","Calendar","handleFaceClick","itemToPrint","dates","JSON","parse","localStorage","getItem","map","index","concat","id","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","getDay","bind","assertThisInitialized","dd","Date","getDate","mm","getMonth","yyyy","getFullYear","setState","objectSpread","defineProperty","e","target","push","setItem","stringify","_this2","Switch","Route","exact","path","render","components_Editor","components_Calendar","ReactDOM","HashRouter","components_App","document","getElementById"],"mappings":"6JAKIA,8GC2CWC,mLA3CP,IAAMC,EAAOC,KAAKC,MAAMF,KADnBG,EAQDF,KAAKC,MALLE,EAHCD,EAGDC,iBACAC,EAJCF,EAIDE,YACAC,EALCH,EAKDG,aACAC,EANCJ,EAMDI,KACAC,EAPCL,EAODK,cAEJ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,IAAkCZ,GAClCS,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0CAEjBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,QAAQC,KAAK,OAAOC,MAAM,QAAQC,SAAUZ,IACxDK,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,QAAQC,KAAK,OAAOC,MAAM,MAAMC,SAAUZ,IACtDK,EAAAC,EAAAC,cAAA,oBAEJF,EAAAC,EAAAC,cAAA,OACAC,UAAWL,EAAKP,IAASO,EAAKP,GAAMiB,OAA4B,IAApBV,EAAKP,GAAMiB,KAAgB,sBAAwB,yBAE3FR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,WACAH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,qBACpBG,MAAQR,EAAKP,IAASO,EAAKP,GAAMkB,eAAiBX,EAAKP,GAAMkB,oBAAiBC,EAC9EH,SAAUX,EAAae,YAAY,uCAEvCX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBACdH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,OAAOU,GAAG,YAAYC,QAASjB,GAA/C,YAEJG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wBACdH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,OAAOU,GAAG,YAAYC,QAASf,GAA/C,sBArCHgB,aC6BNC,mLA5BF,IAAAtB,EAIDF,KAAKC,MAFLwB,EAFCvB,EAEDuB,gBACAC,EAHCxB,EAGDwB,YAEEC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAC9C,OACIvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBACdH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,OAAOU,GAAG,KAA1B,MAEJb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACVgB,EAAMK,IAAI,SAACjC,EAAMkC,GACd,OACIzB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,iBAAAuB,OAAmBnC,EAAKiB,KAAO,QAAU,OAASM,QAASG,EAAiBU,GAAIF,GAAQlC,EAAKiB,KAAO,KAAO,SAKrIR,EAAAC,EAAAC,cAAA,OAAKC,UAA2B,OAAhBe,EAAuB,qBAAuB,6BAC1DlB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAA2Be,EAAcC,EAAMD,GAAa3B,KAAO,MAChFS,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAA2Be,EAAcC,EAAMD,GAAaT,eAAiB,eAtBvFM,6BF+IRa,cA1Ib,SAAAA,EAAYnC,GAAO,IAAAoC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAtC,KAAAoC,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAtC,KAAAsC,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA1C,KAAMC,KACD0C,MAAQ,CACTrC,KAAM,GACNoB,YAAa,MAEjBW,EAAKO,OAASP,EAAKO,OAAOC,KAAZP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACdA,EAAKlC,iBAAiBkC,EAAKlC,iBAAiB0C,KAAtBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACtBA,EAAKjC,YAAYiC,EAAKjC,YAAYyC,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACjBA,EAAKhC,aAAagC,EAAKhC,aAAawC,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAClBA,EAAKZ,gBAAgBY,EAAKZ,gBAAgBoB,KAArBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACrBA,EAAK9B,cAAc8B,EAAK9B,cAAcsC,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAXFA,mFAejBrC,KAAK4C,0CAOL,IAAIG,GADJlD,EAAQ,IAAImD,MACGC,UACXC,EAAKrD,EAAMsD,WAAa,EACxBC,EAAOvD,EAAMwD,cACjBxD,EAAQkD,EAAK,IAAMG,EAAK,IAAME,EAC9BpD,KAAKsD,SAAS,CACZhD,KAAKgC,OAAAiB,EAAA,EAAAjB,CAAA,GACAtC,KAAK2C,MAAMrC,KADZgC,OAAAkB,EAAA,EAAAlB,CAAA,GAEDzC,EAAO,CACRE,KAAMF,gDAQK4D,GACO,UAAnBA,EAAEC,OAAO5C,MACRd,KAAKsD,SAAS,CACZhD,KAAKgC,OAAAiB,EAAA,EAAAjB,CAAA,GACAtC,KAAK2C,MAAMrC,KADZgC,OAAAkB,EAAA,EAAAlB,CAAA,GAEDzC,EAFCyC,OAAAiB,EAAA,EAAAjB,CAAA,GAGCtC,KAAK2C,MAAMrC,KAAKT,GAHjB,CAIFmB,MAAK,QAKThB,KAAKsD,SAAS,CACZhD,KAAKgC,OAAAiB,EAAA,EAAAjB,CAAA,GACAtC,KAAK2C,MAAMrC,KADZgC,OAAAkB,EAAA,EAAAlB,CAAA,GAEDzC,EAFCyC,OAAAiB,EAAA,EAAAjB,CAAA,GAGCtC,KAAK2C,MAAMrC,KAAKT,GAHjB,CAIFmB,MAAK,EACLC,eAAgB,6CASdwC,GACVzD,KAAKsD,SAAS,CACZhD,KAAKgC,OAAAiB,EAAA,EAAAjB,CAAA,GACAtC,KAAK2C,MAAMrC,KADZgC,OAAAkB,EAAA,EAAAlB,CAAA,GAEDzC,EAFCyC,OAAAiB,EAAA,EAAAjB,CAAA,GAGCtC,KAAK2C,MAAMrC,KAAKT,GAHjB,CAIFoB,eAAgBwC,EAAEC,OAAO5C,mDAS7B,GAAIc,KAAKC,MAAMC,aAAaC,QAAQ,UAE7B,CACL,IAAMJ,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAC9CJ,EAAMgC,KAAK3D,KAAK2C,MAAMrC,KAAKT,IAC3BiC,aAAa8B,QAAb,QAA8BhC,KAAKiC,UAAUlC,IAC7C3B,KAAKO,qBALLuB,aAAa8B,QAAb,QAA8BhC,KAAKiC,UAAU,CAAC7D,KAAK2C,MAAMrC,KAAKT,8CAYhEG,KAAKsD,SAAS,CACZ5B,YAAa,+CAMD+B,GACdzD,KAAKsD,SAAS,CACZ5B,YAAa+B,EAAEC,OAAOvB,sCAIjB,IAAA2B,EAAA9D,KACP,OACEQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACAvD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACEC,OAAK,EAACC,KAAK,IACXC,OAAS,kBACP3D,EAAAC,EAAAC,cAAC0D,EAAD,CACErE,KAAMF,EACNS,KAAMwD,EAAKnB,MAAMrC,KACjBH,iBAAkB2D,EAAK3D,iBACvBC,YAAa0D,EAAK1D,YAClBC,aAAcyD,EAAKzD,aACnBE,cAAeuD,EAAKvD,mBAI1BC,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACEE,KAAK,YACLC,OAAS,kBACP3D,EAAAC,EAAAC,cAAC2D,EAAD,CACE5C,gBAAiBqC,EAAKrC,gBACtBC,YAAaoC,EAAKnB,MAAMjB,0BAjIpBH,6BGAlB+C,IAASH,OACL3D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,KACI/D,EAAAC,EAAAC,cAAC8D,EAAD,OACWC,SAASC,eAAe","file":"static/js/main.e93b2212.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Editor from './Editor';\nimport Calendar from './Calendar';\nimport { Route, Switch } from 'react-router-dom';\n\nlet today;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        data: {},\n        itemToPrint: null\n    }\n    this.getDay = this.getDay.bind(this);\n    this.showMessageInput=this.showMessageInput.bind(this);\n    this.saveMessage=this.saveMessage.bind(this);\n    this.createSmilie=this.createSmilie.bind(this);\n    this.handleFaceClick=this.handleFaceClick.bind(this);\n    this.deletePreview=this.deletePreview.bind(this);\n  }\n\n  componentDidMount(){\n    this.getDay();\n  }\n\n  //Genera la fecha de hoy y la guarda en el estado para pasársela al editor.\n\n  getDay() {\n    today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth() + 1;\n    let yyyy = today.getFullYear();\n    today = dd + '/' + mm + '/' + yyyy;\n    this.setState({\n      data: {\n        ...this.state.data,\n        [today]:{\n        date: today,\n        }\n      }\n    });\n  }\n\n  //Guarda en el estado si el usuario ha marcado la opción feliz o triste.\n\n  showMessageInput(e){\n    if(e.target.value === \"happy\"){\n        this.setState({\n          data: {\n            ...this.state.data,\n            [today]:{\n            ...this.state.data[today],\n            mood:true\n            }\n          }\n        });\n    } else {\n        this.setState({\n          data: {\n            ...this.state.data,\n            [today]:{\n            ...this.state.data[today],\n            mood:false,\n            contentMessage: '',\n            }\n          }\n        });\n    }\n  }\n\n  // Guarda en el estado el mensaje que escribe el usuario.\n\n  saveMessage(e){\n    this.setState({\n      data: {\n        ...this.state.data,\n        [today]:{\n        ...this.state.data[today],\n        contentMessage: e.target.value,\n        }\n      }\n    });\n  }\n\n  //Cuando pinchas guardar: guarda en LocalStorage los datos del día actual.\n\n  createSmilie(){\n    if(!JSON.parse(localStorage.getItem('dates'))){\n      localStorage.setItem(`dates`, JSON.stringify([this.state.data[today]]));\n    } else {\n      const dates = JSON.parse(localStorage.getItem('dates'));\n      dates.push(this.state.data[today]);\n      localStorage.setItem(`dates`, JSON.stringify(dates));\n      this.deletePreview();\n    }\n  }\n\n  //Borra los datos del cuadro de la información que se muestra cuando pinchas en una carita en el calendario.\n\n  deletePreview(){\n    this.setState({\n      itemToPrint: null\n    });\n  }\n\n  // Cuando pinchas en la carita: guarda en el estado de App el id del día para luego imprimir los datos de ese día en el cuadro de detalle.\n\n  handleFaceClick(e){\n    this.setState({\n      itemToPrint: e.target.id,\n    });\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n        <Route \n          exact path='/' \n          render={ () =>  \n            <Editor \n              date={today}\n              data={this.state.data}\n              showMessageInput={this.showMessageInput}\n              saveMessage={this.saveMessage} \n              createSmilie={this.createSmilie}\n              deletePreview={this.deletePreview}\n            />\n          } \n        />\n        <Route \n          path='/calendar' \n          render={ () =>\n            <Calendar\n              handleFaceClick={this.handleFaceClick}\n              itemToPrint={this.state.itemToPrint}\n            />\n          }\n        />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Editor extends Component {\n    render() {\n        const date = this.props.date;\n        const {\n            showMessageInput,\n            saveMessage,\n            createSmilie,\n            data,\n            deletePreview,\n        } = this.props;\n        return (\n            <div className=\"editor\">\n                <h1 className=\"editor-title\">Fecha</h1>\n                <div className=\"editor-date-container\">\n                    <p className=\"editor-date-date\"> {date}</p>\n                    <i className=\"editor-date-icon fas fa-calendar-alt\"></i>\n                </div>\n                <h1 className=\"editor-title\">Estado</h1>\n                <div className=\"editor-status-container\">\n                    <input type=\"radio\" name=\"mood\" value=\"happy\" onChange={showMessageInput} />\n                    <label>:)</label>\n                    <input type=\"radio\" name=\"mood\" value=\"sad\" onChange={showMessageInput} />\n                    <label>:(</label>\n                </div>\n                <div \n                className={data[date] && data[date].mood && data[date].mood === true ? 'editor-message-show' : 'editor-message-hidden'}\n                >\n                    <h1 className=\"editor-title\">Mensaje</h1>\n                    <textarea className=\"editor-message-box\" \n                    value ={data[date] && data[date].contentMessage ? data[date].contentMessage : undefined} \n                    onChange={saveMessage} placeholder=\"¿Por qué es un buen día?\" />\n                </div>\n                <div className=\"editor-button-container\">\n                    <button className=\"editor-button-save\">\n                        <Link className=\"link\" to='/calendar' onClick={createSmilie}>Guardar</Link>\n                    </button>\n                    <button className=\"editor-button-cancel\">\n                        <Link className=\"link\" to='/calendar' onClick={deletePreview}>Cancelar</Link>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Editor;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Calendar extends Component {\n    render() { \n        const {\n            handleFaceClick,\n            itemToPrint\n        } = this.props;\n        const dates = JSON.parse(localStorage.getItem('dates'))\n        return ( \n            <div className=\"calendar\">\n                <button className=\"calendar-button\">\n                    <Link className=\"link\" to='/'>+</Link>\n                </button>\n                <div className=\"calendar-container\">\n                    {dates.map((date, index) => {\n                        return (\n                            <div className={`calendar-face-${date.mood ? 'happy' : 'sad'}`} onClick={handleFaceClick} id={index}>{date.mood ? ':)' : ':('}\n                            </div>\n                        );\n                    })}\n                </div>\n                <div className={itemToPrint !== null ? 'calendar-face-data' : 'calendar-face-data-hidden'}>\n                    <p className=\"calendar-face-data-text\">{itemToPrint ? dates[itemToPrint].date : null}</p>\n                    <p className=\"calendar-face-data-text\">{itemToPrint ? dates[itemToPrint].contentMessage : null}</p>\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default Calendar;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport Fontawesome from '@fortawesome/fontawesome-free/css/all.css';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>, document.getElementById('root'));\n"],"sourceRoot":""}